plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

repositories {
    mavenCentral()
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.4.1'
    // aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    // testImplementation 'io.projectreactor:reactor-test'
    implementation 'org.apache.rocketmq:rocketmq-spring-boot-starter:2.2.1'
    // mysql 驱动包
    implementation 'mysql:mysql-connector-java:8.0.17'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // lcn-tc 事务参与者
    implementation 'com.codingapi.txlcn:txlcn-tc:5.0.2.RELEASE'
    implementation 'com.codingapi.txlcn:txlcn-txmsg-netty:5.0.2.RELEASE'

    // redis 服务
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'io.seata:seata-spring-boot-starter:1.4.2'
    // 如果使用了 springcloud 中的 resttemplate，需要使用 seata cloud，内部封装了 resttemplate 拦截器，用来拦截请求并设值 xid 分布式事务id
    compile('com.alibaba.cloud:spring-cloud-starter-alibaba-seata:2021.1') {
        exclude group: 'io.seata', module: 'seata-spring-boot-starter'
    }
    // seata 需要用到的 jar 包
    implementation 'com.netflix.archaius:archaius-core:0.7.7'
    implementation 'com.sun.jersey.contribs:jersey-apache-client4:1.19.4'

}

test {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
