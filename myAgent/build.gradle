plugins {
    id 'java-library'
    id 'maven-publish'
}

version '1.1-SNAPSHOT'

jar {
    manifestContentCharset 'utf-8'
    metadataCharset 'utf-8'
    manifest {
        attributes "Premain-Class": "com.kaige.advance.agent.MyAgent"
    }
    // from {
    //     configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    // }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'myAgent'
            from components.java
            // versionMapping {
            //     usage('java-api') {
            //         fromResolutionOf('runtimeClasspath')
            //     }
            //     usage('java-runtime') {
            //         fromResolutionResult()
            //     }
            // }
            // pom {
            //     name = 'My Agent'
            //     description = 'A concise description of my library'
            //     url = 'http://www.example.com/library'
            //     properties = [
            //             myProp: "value",
            //             "prop.with.dots": "anotherValue"
            //     ]
            //     licenses {
            //         license {
            //             name = 'The Apache License, Version 2.0'
            //             url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            //         }
            //     }
            //     developers {
            //         developer {
            //             id = 'johnd'
            //             name = 'John Doe'
            //             email = 'john.doe@example.com'
            //         }
            //     }
            //     scm {
            //         connection = 'scm:git:git://example.com/my-library.git'
            //         developerConnection = 'scm:git:ssh://example.com/my-library.git'
            //         url = 'http://example.com/my-library/'
            //     }
            // }
        }
    }
    // repositories {
    //     maven {
    //         // change URLs to point to your repos, e.g. http://my.org/repo
    //         def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
    //         def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
    //         url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
    //     }
    // }
}
